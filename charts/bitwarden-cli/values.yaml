# Default values for bitwarden-cli.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: "irohn/bitwarden-cli"
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

env:
  - name: BW_HOST
    valueFrom:
      secretKeyRef:
        name: bitwarden-cli
        key: BW_HOST
  - name: BW_USER
    valueFrom:
      secretKeyRef:
        name: bitwarden-cli
        key: BW_USERNAME
  - name: BW_PASSWORD
    valueFrom:
      secretKeyRef:
        name: bitwarden-cli
        key: BW_PASSWORD
  - name: BW_CLIENTID
    valueFrom:
      secretKeyRef:
        name: bitwarden-cli
        key: BW_CLIENTID
  - name: BW_CLIENTSECRET
    valueFrom:
      secretKeyRef:
        name: bitwarden-cli
        key: BW_CLIENTSECRET

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8087

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80


livenessProbe:
  exec:
    command:
      - wget
      - -q
      - http://127.0.0.1:8087/sync?force=true
      - --post-data=''
  initialDelaySeconds: 20
  failureThreshold: 3
  timeoutSeconds: 10
  periodSeconds: 120
readinessProbe:
  tcpSocket:
    port: 8087
  initialDelaySeconds: 20
  failureThreshold: 3
  timeoutSeconds: 1
  periodSeconds: 10
startupProbe:
  tcpSocket:
    port: 8087
  initialDelaySeconds: 10
  failureThreshold: 30
  timeoutSeconds: 1
  periodSeconds: 5

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
